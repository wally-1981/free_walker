<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.free.walker.service.itinerary.dao.mapper.BasicMapper">
	<sql id="locationColumns">
		hex(uuid) as uuid,
		name as name,
		chinese_name as chineseName,
		pinyin_name as pinyinName
	</sql>

	<sql id="agencyColumns">
		hex(agency.uuid) as uuid,
		agency.name as name,
		agency.title as title,
		agency.rating as rating,
		agency.hmd as hmd,
		agency.exp as exp
	</sql>

	<sql id="selectLocationsByUuid">
		select uuid from city where uuid = unhex(replace(#{uuid}, '-', ''))
		union
		select uuid from province where uuid = unhex(replace(#{uuid}, '-', ''))
		union
		select uuid from country where uuid = unhex(replace(#{uuid}, '-', ''))
		union
		select uuid from region where uuid = unhex(replace(#{uuid}, '-', ''))
	</sql>

	<sql id="selectLocationsByTerm">
		select uuid from city where chinese_name = #{term} or name = #{term} or pinyin_name = #{term}
		union
		select uuid from province where chinese_name = #{term} or name = #{term} or pinyin_name = #{term}
		union
		select uuid from country where chinese_name = #{term} or name = #{term} or pinyin_name = #{term}
		union
		select uuid from region where chinese_name = #{term} or name = #{term} or pinyin_name = #{term}
	</sql>

	<sql id="selectLocationsByDepartureUuid">
		select uuid as uuid from city where uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
		union
		select uuid as uuid from province where uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
		union
		select uuid as uuid from country where uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
		union
		select uuid as uuid from region where uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
	</sql>

	<sql id="selectLocationsByDestinationUuid">
		select uuid as uuid from city where uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		union
		select uuid as uuid from province where uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		union
		select uuid as uuid from country where uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		union
		select uuid as uuid from region where uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
	</sql>

	<sql id="joinAgencyBizLocation4Send">
		join agency_biz_location on agency_biz_location.location_uuid = location.uuid
		join agency on agency.uuid = agency_biz_location.agency_uuid
		where agency_biz_location.send_recv = 0
	</sql>

	<sql id="joinAgencyBizLocation4Recv">
		join agency_biz_location on agency_biz_location.location_uuid = location.uuid
		join agency on agency.uuid = agency_biz_location.agency_uuid
		where agency_biz_location.send_recv = 1
	</sql>

	<select id="pingPersistence" resultType="Integer">
		select
			count(*)
		from
			information_schema.tables
		where
			table_name = 'country' or
			table_name = 'province' or
			table_name = 'city'
	</select>

	<select id="getAllRegions" resultType="Region">
		select
			<include refid="locationColumns"/>
		from
			region
	</select>

	<select id="getAllCounties" resultType="Country">
		select
			<include refid="locationColumns"/>
		from
			country
	</select>

	<select id="getAllProvinces" resultType="Province">
		select
			<include refid="locationColumns"/>
		from
			province
	</select>

	<select id="getAllCities" resultType="City">
		select
			<include refid="locationColumns"/>,
			hex(province_uuid) as provinceUuid,
			hex(country_uuid) as countryUuid,
			continent_id as continentId
		from city
	</select>

	<select id="getRegion" resultType="Region">
		select
			<include refid="locationColumns"/>
		from
			region
		where
			uuid = unhex(replace(#{uuid}, '-', ''))
	</select>

	<select id="getCountry" resultType="Country">
		select
			<include refid="locationColumns"/>
		from
			country
		where
			uuid = unhex(replace(#{uuid}, '-', ''))
	</select>

	<select id="getProvince" resultType="Province">
		select
			<include refid="locationColumns"/>
		from
			province
		where
			uuid = unhex(replace(#{uuid}, '-', ''))
	</select>

	<select id="getCity" resultType="City">
		select
			<include refid="locationColumns"/>,
			hex(province_uuid) as provinceUuid,
			hex(country_uuid) as countryUuid,
			continent_id as continentId
		from city
		where
			uuid = unhex(replace(#{uuid}, '-', ''))
	</select>

	<select id="getAgency" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from agency
		where
			uuid = unhex(replace(#{uuid}, '-', ''))
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="hasLocationByTerm" resultType="String">
		select
			hex(uuid)
		from
		(
			<include refid="selectLocationsByTerm"/>
		) as location
		limit 1
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="hasLocationByUuid" resultType="String">
		select
			hex(uuid)
		from
		(
			<include refid="selectLocationsByUuid"/>
		) as location
		limit 1
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="countLocationByTerm" resultType="Integer">
		select
			count(uuid)
		from
		(
			<include refid="selectLocationsByTerm"/>
		) as location
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="countLocationByUuid" resultType="Integer">
		select
			count(uuid)
		from
		(
			<include refid="selectLocationsByUuid"/>
		) as location
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="countDomesticLocationByTerm" resultType="Integer">
		select
			count(*)
		from city as c
		right join province as p
			on c.province_uuid = p.uuid
		right join country as co
			on c.country_uuid = co.uuid
		where
			co.name = 'China' and
			(
				(c.chinese_name = #{term} or c.name = #{term} or c.pinyin_name = #{term}) or
				(p.chinese_name = #{term} or p.name = #{term} or p.pinyin_name = #{term}) or
				(co.chinese_name = #{term} or co.name = #{term} or co.pinyin_name = #{term})
			)
	</select>

	<!-- Continents are stored in memory, so sql will not count them. -->
	<select id="countDomesticLocationByUuid" resultType="Integer">
		select
			count(*)
		from city as c
		right join province as p
			on c.province_uuid = p.uuid
		right join country as co
			on c.country_uuid = co.uuid
		where
			co.name = 'China' and
			(c.uuid = unhex(replace(#{uuid}, '-', '')) or p.uuid = unhex(replace(#{uuid}, '-', '')) or co.uuid = unhex(replace(#{uuid}, '-', '')))
	</select>

	<select id="getAgencies4DomesticDestination" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from
		(
			<include refid="selectLocationsByDepartureUuid"/>
			union
			select associated_location_uuid as uuid from location_association where location_uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
		) as location
		<include refid="joinAgencyBizLocation4Send"/>
		
		union
		
		select
			<include refid="agencyColumns"/>
		from
		(
			<include refid="selectLocationsByDestinationUuid"/>
			union
			select associated_location_uuid as uuid from location_association where location_uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		) as location
		<include refid="joinAgencyBizLocation4Recv"/>
	</select>

	<select id="getAgencies4InternationalDestination" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from
		(
			<include refid="selectLocationsByDepartureUuid"/>
			union
			select associated_location_uuid as uuid from location_association where location_uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
			union
			select port_location_uuid as uuid from port_association where location_uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		) as location
		<include refid="joinAgencyBizLocation4Send"/>
		
		union
		
		select
			<include refid="agencyColumns"/>
		from
		(
			<include refid="selectLocationsByDestinationUuid"/>
			union
			select convert(unhex(continent_id), binary(16)) as uuid from city where continent_id = #{destinationLocationUuid} limit 1
			union
			select associated_location_uuid as uuid from location_association where location_uuid = unhex(replace(#{destinationLocationUuid}, '-', ''))
		) as location
		<include refid="joinAgencyBizLocation4Recv"/>
	</select>

	<select id="getAgencies4DangleDestination" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from
		(
			<include refid="selectLocationsByDepartureUuid"/>
			union
			select associated_location_uuid as uuid from location_association where location_uuid = unhex(replace(#{departureLocationUuid}, '-', ''))
		) as location
		<include refid="joinAgencyBizLocation4Send"/>
	</select>

	<select id="getHottestTags" resultType="Tag">
		select
			name as name,
			frequency as frequency
		from
			tag
		order by frequency desc
		limit #{topN}
	</select>

	<insert id="associateLocation">
		insert into location_association (location_uuid, associated_location_uuid)
		values (convert(unhex(replace(#{primary}, '-', '')), binary(16)), convert(unhex(replace(#{secondary}, '-', '')), binary(16)))
	</insert>

	<select id="countAssociatedLocation" resultType="Integer">
		select
			count(id)
		from
			location_association
		where
			location_uuid = convert(unhex(replace(#{primary}, '-', '')), binary(16))
	</select>

	<delete id="deassociateLocation">
		delete from location_association
		where
			location_uuid = convert(unhex(replace(#{primary}, '-', '')), binary(16)) and
			associated_location_uuid = convert(unhex(replace(#{secondary}, '-', '')), binary(16))
	</delete>

	<insert id="associatePortLocation">
		insert into port_association (location_uuid, port_location_uuid)
		values (unhex(replace(#{primary}, '-', '')), unhex(replace(#{secondary}, '-', '')))
	</insert>

	<select id="countAssociatedPortLocation" resultType="Integer">
		select
			count(id)
		from
			port_association
		where
			location_uuid = unhex(replace(#{primary}, '-', ''))
	</select>

	<delete id="deassociatePortLocation">
		delete from port_association
		where
			location_uuid = unhex(replace(#{primary}, '-', '')) and
			port_location_uuid = unhex(replace(#{secondary}, '-', ''))
	</delete>

	<insert id="addAgency" parameterType="Agency">
		insert into agency (uuid, name, title, rating, hmd, exp)
		values (unhex(replace(#{uuid}, '-', '')), #{name}, #{title}, #{rating}, #{hmd}, #{exp})
	</insert>

	<insert id="addAgencies" parameterType="Map">
		insert into agency (uuid, name, title, rating, hmd, exp)
		values
		<foreach collection="agencies" item="agency" index="index" separator=",">
			(unhex(replace(#{agency.uuid}, '-', '')), #{agency.name}, #{agency.title}, #{agency.rating}, #{agency.hmd}, #{agency.exp})
		</foreach>
	</insert>

	<insert id="relAgencyLocation">
		insert into agency_biz_location (agency_uuid, location_uuid, send_recv)
		values (unhex(replace(#{agencyId}, '-', '')), convert(unhex(replace(#{locationId}, '-', '')), binary(16)), #{sendRecv})
	</insert>

	<select id="countRelAgencyLocation4Send" resultType="Integer">
		select
			count(id)
		from
			agency_biz_location
		where
			agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			send_recv = 0
	</select>

	<select id="countRelAgencyLocation4Recv" resultType="Integer">
		select
			count(id)
		from
			agency_biz_location
		where
			agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			send_recv = 1
	</select>

	<delete id="unrelAgencyLocation">
		delete from agency_biz_location
		where
			agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			location_uuid = convert(unhex(replace(#{locationId}, '-', '')), binary(16)) and
			send_recv = #{sendRecv}
	</delete>

	<select id="getRelAgencyLocation4Send" resultType="String">
		select
			hex(location_uuid)
		from
			agency_biz_location
		where
			agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			send_recv = 0
	</select>

	<select id="getRelAgencyLocation4Recv" resultType="String">
		select
			hex(location_uuid)
		from
			agency_biz_location
		where
			agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			send_recv = 1
	</select>

	<delete id="deleteAgency">
		delete from agency
		where
			uuid = unhex(replace(#{uuid}, '-', ''));
		
		delete from agency_biz_location
		where
			agency_uuid = unhex(replace(#{uuid}, '-', ''));
	</delete>

	<insert id="addAgencyCandidates4Proposal" parameterType="Map">
		insert into agency_candidate (agency_uuid, proposal_uuid, proposal_summary)
		values
		<foreach collection="candidates" item="agency" index="index" separator=",">
			(unhex(replace(#{agency.uuid}, '-', '')), unhex(replace(#{proposalId}, '-', '')), #{proposalSummary})
		</foreach>
	</insert>

	<select id="getAgencyCandidates4Proposal" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from agency
		join agency_candidate
			on agency.uuid = agency_candidate.agency_uuid
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', ''))
	</select>

	<select id="getProposals4AgencyCandidate" resultType="StringPair">
		select
			hex(ac.proposal_uuid) as 'primary', ac.proposal_summary as secondary
		from agency_candidate as ac
		where
			ac.agency_uuid = unhex(replace(#{agencyId}, '-', '')) and
			ac.election_status = 0 and ac.respond_status = 0 and
			ac.created between adddate(now(), interval -#{latestNMin} minute) and now()
	</select>

	<update id="markAgencyCandidateAsResponded">
		update
			agency_candidate
		set
			agency_candidate.respond_status = 1
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and agency_candidate.agency_uuid = unhex(replace(#{agencyId}, '-', ''))
	</update>

	<select id="getRespondedAgencyCandidates4Proposal" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from agency
		join agency_candidate
			on agency.uuid = agency_candidate.agency_uuid
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and
			agency_candidate.respond_status = 1 and
			agency_candidate.election_status = 0
	</select>

	<select id="canRotateElection4Proposal" resultType="String">
		select
			unhex(agency_candidate.agency_uuid)
		from agency_candidate
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and
			agency_candidate.election_status = 1 and
			agency_candidate.updated between adddate(now(), interval -#{latestNHour} hour) and now()
		order by agency_candidate.updated desc
		limit 1
	</select>

	<update id="markAgencyCandidatesAsElected" parameterType="Map">
		<foreach collection="agencyIds" item="agencyId" index="index" separator=";">
			update
				agency_candidate
			set agency_candidate.election_status = 1
			where
				agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and agency_candidate.agency_uuid = unhex(replace(#{agencyId}, '-', ''))
		</foreach>
	</update>

	<select id="getElectedAgencyCandidates4Proposal" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from agency
		join agency_candidate
			on agency.uuid = agency_candidate.agency_uuid
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and agency_candidate.election_status != 0
	</select>

	<select id="getNotElectedAgencyCandidates4Proposal" resultType="Agency">
		select
			<include refid="agencyColumns"/>
		from agency
		join agency_candidate
			on agency.uuid = agency_candidate.agency_uuid
		where
			agency_candidate.proposal_uuid = unhex(replace(#{proposalId}, '-', '')) and agency_candidate.election_status = 0
	</select>
</mapper>
 